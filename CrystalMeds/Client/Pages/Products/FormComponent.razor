@using CrystalMeds.Client.Components
@using CrystalMeds.Shared.Domain;
@inject HttpClient _client

<EditForm Model="@product" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<fieldset disabled="@Disabled">
	<div class="form-group">
		<label>Name: </label>
		<div>
			<InputText @bind-Value="product.ProductName" class="form-control">
				<InputText value="">-- select name --</InputText>
			</InputText>
			<ValidationMessage For="@(() => product.ProductName)" />
		</div>
	</div>

	<div class="form-group">
		<label>price: </label>
		<div>
			<InputNumber @bind-Value="product.ProductPrice" class="form-control" />
			<ValidationMessage For="@(() => product.ProductPrice)" />
		</div>
	</div>

	<div class="form-group">
		<label>Description: </label>
		<div>
			<InputText @bind-Value="product.ProductDescription" class="form-control" />
			<ValidationMessage For="@(() => product.ProductDescription)" />
		</div>
	</div>

	<div class="form-group">
		<label>Category: </label>
		<div>
			<InputSelect @bind-Value="product.CategoryId" class="form-control">
				<option value="">-- select category --</option>
				@if (Categories != null)
				{
					foreach (var category in Categories)
					{
						<option value="@category.CategoryId">@category.CategoryName</option>
					}
				}
			</InputSelect>
			<ValidationMessage For="@(() => product.CategoryId)" />
		</div>
	</div>
	</fieldset>
	@if (!Disabled){
		<button type="submit" class="btn btn-success btn-block">
		@ButtonText
	</button>
	}
	<BackToList Target="products" />
</EditForm>

@code {
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public Product? product { get; set; }
	[Parameter] public Category? category { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }



	private IList<Category>? Categories;


	protected async override Task OnInitializedAsync()
	{
		
		Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
	
}
}