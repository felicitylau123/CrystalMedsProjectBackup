@* @page "/checkout"
@inject NavigationManager Navigation
@inject HttpClient _client
@inject IJSRuntime js

<h3>SelfPickup</h3>

<h3 class="card-title">Create new Pick Up</h3>
<hr />
<br />
<EditForm Model="@pickup" OnValidSubmit="CreatePickUp">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Pharmacy Name: </label>
        <div>
            <InputText @bind-Value="category.CategoryName" class="form-control">
                <InputText value="">-- select name --</InputText>
            </InputText>
            <ValidationMessage For="@(() => category.CategoryName)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Category
    </button>
</EditForm>

@code {

    Category category = new Category();
    private IList<Category>? Categories;

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

    private async Task CreateCategory()
    {
        await _client.PostAsJsonAsync(Endpoints.CategoriesEndpoint, category);
        _navManager.NavigateTo("/category/");
    }


} *@
