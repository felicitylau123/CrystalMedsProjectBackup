@using CrystalMeds.Client.Components
@using CrystalMeds.Shared.Domain;
@inject HttpClient _client

<EditForm Model="@customer" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<fieldset disabled="@Disabled">
	<div class="form-group">
		@* <label>CustomerID: </label>
		<div>
			<InputSelect @bind-Value="customer.CustomerId" class="form-control">
			</InputSelect>
			<ValidationMessage For="@(() => customer.CustomerId)" />
			</div> *@
	</div> 

	<div class="form-group">
		<label>UserName: </label>
		<div>
			<InputText @bind-Value="customer.UserName" class="form-control">
				<InputText value="">-- select name --</InputText>
			</InputText>
			<ValidationMessage For="@(() => customer.UserName)" />
		</div>
	</div>

		<div class="form-group">
			<label>Phone number: </label>
			<div>
				<InputText @bind-Value="customer.PhoneNumber" class="form-control" />
				<ValidationMessage For="@(() => customer.PhoneNumber)" />
			</div>
		</div>

		<div class="form-group">
			<label>Email address: </label>
			<div>
				<InputText @bind-Value="customer.Email" class="form-control" />
				<ValidationMessage For="@(() => customer.Email)" />
			</div>
		</div>
		<div class="form-group">
			<label>Address: </label>
			<div>
				<InputText @bind-Value="customer.Address" class="form-control" />
				<ValidationMessage For="@(() => customer.Address)" />
			</div>
		</div>
	</fieldset>
	@if (!Disabled){
		<button type="submit" class="btn btn-success btn-block">
		@ButtonText
	</button>
	}
	<BackToList Target="customers" />
</EditForm>

@code {
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public Customer? customer { get; set; }
	[Parameter] public Category? category { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }



	private IList<Category>? Categories;


	protected async override Task OnInitializedAsync()
	{
		
		Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
	
}
}